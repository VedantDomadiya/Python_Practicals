# -*- coding: utf-8 -*-
"""Numpy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_cEw1LtDdcAylyg-jBMTWOe0B6RKoqjm
"""

# Import numpy
import numpy as np

# Creating two numpy arrays
arr1 = np.array([0,2,4,5,3,6,8,9,7,10])
arr2 = np.array([10,9,8,7,6,0,4,3,2,1])

# Display original arrays
print("Original array 1:\n",arr1,"\n")
print("Original array 2:\n",arr2,"\n")

# Find the union of these arrays
res = np.logical_and(arr1,arr2)

# Display result
print("Union of array:\n",res)

import numpy as np
x = np.array([[1, 2, 3], [3, 4, 5]])
y = np.array([6,7,8])

# Add `x` and `y`
z = np.add(x,y)
print("Addition of x and y:\n", z)

# Subtract `x` and `y`
z = np.subtract(x,y)
print("Subtraction of y from x:\n", z)

# Multiply `x` and `y`
z = np.multiply(x,y)
print("Element-wise multiplication of x and y:\n", z)



#How to extract items that satisfy a given condition from 1D array?
#Extract all odd numbers from
# Input
arr = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
arr[arr % 3== 0]

# Replace all Odd Numbers from -1
arr[arr % 2 == 1] = -1
arr

arr = np.arange(10)
out = np.where(arr % 2 == 1, -1, arr)
print(arr)
out

## Take an input array of number 0 to 10 , if number is less than 5 return the same value else return the value multiplied by 10.

a = np.arange(10)
a
np.where(a < 5, a, 10*a)

x, y = np.ogrid[:3, :4]
x,y

#Convert a 1D array to a 2D array with 2 rows
arr = np.arange(8)
arr.reshape(2, 4)

a = np.arange(10).reshape(2,-1)
print(a)
b = np.repeat(1, 10).reshape(2,-1)
print(b)

np.concatenate([a, b], axis=1)

#np.vstack([a, b])

#Get the common items between a and b
a = np.array([1,2,3,2,3,4,3,4,5,6])
b = np.array([7,2,10,2,7,4,9,4,9,8])

c= np.intersect1d(a,b)
c

# From 'a' remove all of 'b'
a = np.array([1,2,3,4,5,6])
b = np.array([5,6,7,8,9])


c= np.setdiff1d(a,b)
c

#Get all items between 5 and 10 from a.

#Input:
a = np.array([2, 6, 1, 9, 10, 3, 27])
index = np.where((a >= 5) & (a <= 10))
index
a[index]

a = np.array([5, 7, 9, 8, 6, 4, 5])
b = np.array([6, 3, 4, 8, 9, 7, 1])
def maxx(x, y):
    """Get the maximum of two items"""
    if x >= y:
        return x
    else:
        return y

pair_max = np.vectorize(maxx, otypes=[int])
pair_max(a, b)

#Swap columns 1 and 2 in the array arr.
import numpy as np
arr = np.arange(9).reshape(3,3)
arr
arr[:, [2,1,0]]





# Swap rows 1 and 2 in the array arr:
arr = np.arange(9).reshape(3,3)

# Solution
arr[[1,2,0], :]

# Reverse the rows of a 2D array arr.
import numpy as np
arr = np.arange(16).reshape(4,4)
arr

# Solution
arr[ : :-1 ,: ]

#Create a 2D array of shape 5x3 to contain random integer numbers between 5 and 10.
rand_arr = np.random.randint(low=5, high=10, size=(5,3))
rand_arr

#Create a 2D array of shape 5x3 to contain random decimal numbers between 5 and 10.
#rand_arr = np.random.randint(low=5, high=10,size=(5,3))+ np.random.random((5,3))
#print(rand_arr)

import functools as ft

a=[1,3,5,7,1]
b =ft.reduce(lambda x,y:x*y ,a)
print(b)

n=[1,3,5,7,9]
def rotate(l):
  return l[-1:] + l[0:-1]
print(rotate(n))
n[-1]

